<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
	
    <!-- Session name change to disguise its a Java based application -->
	<session-config>
		<cookie-config>
			<name>GROOVY_SESSION_ID</name>
		</cookie-config>
	</session-config>
	
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	
	<!-- Spring MVC filters -->
	
	<!-- This filter is used to specify the character encoding for request -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<!-- This filter provides support for HTTP methods other than GET and POST -->
	<filter>
		<filter-name>HttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<!-- This filter binds the JPA EntityManager to the thread for the entire processing of the request -->
	<filter>
		<filter-name>SpringOpenEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>HttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    <filter-mapping>
		<filter-name>SpringOpenEntityManagerInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/site/*</url-pattern>
	</servlet-mapping>
	
<!-- 	<servlet> -->
<!-- 		<servlet-name>jersey-servlet</servlet-name> -->
<!-- 		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class> -->
<!-- 		<init-param> -->
<!-- 			<param-name>com.sun.jersey.config.property.packages</param-name> -->
<!-- 			<param-value>com.codecrocodile</param-value> -->
<!-- 		</init-param> -->
<!-- 		<init-param> -->
<!--             <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name> -->
<!--             <param-value>true</param-value> -->
<!--         </init-param> -->
<!--         <init-param> -->
<!-- 			<param-name>contextConfigLocation</param-name> -->
<!-- 			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value> -->
<!-- 		</init-param> -->
<!-- 		<load-on-startup>1</load-on-startup> -->
<!-- 	</servlet> -->

	<servlet>
		<servlet-name>jersey-servlet</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
<!--         <init-param> -->
<!--             <param-name>jersey.config.server.provider.packages</param-name> -->
<!--             <param-value>com.codecrocodile</param-value> -->
<!--         </init-param> -->
<!--         <init-param> -->
<!--            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name> -->
<!--            <param-value>true</param-value> -->
<!--         </init-param> -->
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>com.codecrocodile.club.common.JerseyResourceConfig</param-value>            
        </init-param>
        
<!--         <init-param> -->
<!-- 			<param-name>contextConfigLocation</param-name> -->
<!-- 			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value> -->
<!-- 		</init-param> -->
		<load-on-startup>1</load-on-startup>
	</servlet>
 
	<servlet-mapping>
		<servlet-name>jersey-servlet</servlet-name>
		<url-pattern>/clubapp/rest/*</url-pattern>
	</servlet-mapping>

</web-app>
